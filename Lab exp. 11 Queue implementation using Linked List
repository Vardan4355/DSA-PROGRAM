// Queue implemenatation using Linked List
#include<stdio.h>
#include<stdlib.h>
typedef struct Node{
    int data;
    struct Node* next;
}Node;
Node* front = NULL;
Node* rear = NULL;
void enqueue(int data){
    Node* temp = (Node*)malloc(sizeof(Node));
    temp->data = data;
    temp->next= NULL;
    if(rear == NULL){
        front = rear = temp;
    }
    else{
        rear->next = temp;
        rear = temp;
    }
    printf("Element %d added to the queue\n", data);
}
int dequeue(int data){
    if(front == NULL){
        printf("Queue Underflow !!\n");
        return -1;
    }
    else{
        int data = front->data;
        Node* temp = front;
        front = front->next;
        if(front == NULL){
            rear = NULL;
            free(temp);
            return data;
        }
        printf("Element %d removed from the queue\n", data);
    }
}
int peek(){
    if(front == NULL){
        printf("Queue is empty\n");
    }
    else{
        printf("Front element is %d\n", front->data);
        return front->data;
    }
}
void display(){
    if(front == NULL){
        printf("Queue is empty\n");
    }
    else{
        Node* temp = front;
        printf("Queue elements are: \n");
        while(temp != NULL){
            printf("%d ", temp->data);
            temp = temp->next;
        }
        printf("\n");
    }
}
int main(){
    while(1){
        printf("-----Queue Implementation using Linked List------\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Peek\n");
        printf("4. Display\n");
        printf("5. Exit\n");
        int choice, data;
        printf("Enter Choice : ");
        scanf("%d", &choice);
        switch(choice){
            case 1: 
                printf("Enter Data: ");
                scanf("%d", &data);
                enqueue(data);
                break;
            case 2: 
                dequeue(data);
                break;
            case 3:
                peek();
                break;
            case 4:
                display();
                break;
            case 5:
                exit(0);
            default:
                printf("Invalid Choice !!!\n");
        }
    }
    return 0;
}
