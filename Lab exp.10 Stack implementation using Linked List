// Stack Implementation using Linked List
#include<stdio.h>
#include<stdlib.h>
typedef struct Node{
    int data;
    struct Node *next;
}Node;
Node* top = NULL;
void(push(int value)){
        Node *temp = (Node*)malloc(sizeof(Node));
        if(temp == NULL)
            printf("Stack Overflow !!\n");
            else{
                   temp->data = value;
                   temp->next = top;
                   top = temp;
                    printf("Push %d into the stack\n", value);;
            }
    }
int pop(){
      if(top == NULL){
        printf("stack underflow !!\n");
        return -1;
      }
      else{
        Node *temp = top;
        int value = temp->data;
        top = top->next;
        free(temp);
        printf("Pop %d from the stack\n", value);
        return value;
      }
}
int peek(){
    if(top == NULL){
        printf("Stack is empty !!\n");
    }
    else{
        printf("Top element is %d\n", top->data);
        return top->data;
    }
}
void display(){
    if(top == NULL)
        printf("Stack is empty !!\n");
    else{
        Node *temp = top;
        printf("Stack elements are : \n");
        while(temp != NULL){
            printf("%d ", temp->data);
            temp = temp->next;
        }
        printf("\n");
    }
}
int main(){
    while(1){
        printf("-----Stack Implementation using Linked List------ \n");
        printf("1. Push\n");
        printf("2. Pop\n");
        printf("3. Peek\n");
        printf("4. Display\n");
        printf("5. Exit\n");
        int choice, value, res;
        printf("Enter Choice : ");
        scanf("%d", &choice);
        switch(choice){
            case 1:
            printf("Enter value : ");
            scanf("%d", &value);
            push(value);
            break;
            case 2:
             res = pop();
             if(res != -1)
                printf("Pop value is %d\n", res);
            break;
            case 3: 
              res = peek();
              if(res != -1)
              printf("Peek value is %d\n", res);
            break;
            case 4:
              display();
            break;
            case 5:
            exit(0);
            break;
            default:
            printf("Invalid Choice !!!\n");
            break;
        }
    }
}
